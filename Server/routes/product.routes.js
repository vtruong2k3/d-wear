// const express = require("express");
// const productRouter = express.Router();
// const upload = require("../middlewares/uploadProduct.middleware");
// const productControler = require("../controllers/product.controller");
// const authAdminMiddelware = require("../middlewares/authAdmin.middleware");

// productRouter.post(
//   "/product",
//   authAdminMiddelware,
//   upload.fields([
//     { name: "productImage", maxCount: 8 },
//     { name: "imageVariant", maxCount: 10 },
//   ]),
//   productControler.createProductWithVariants
// );
// productRouter.put(
//   "/product/:id",
//   authAdminMiddelware,
//   upload.fields([
//     { name: "productImage", maxCount: 8 },
//     { name: "imageVariant", maxCount: 10 },
//   ]),
//   productControler.updateProductWithVariants
// );
// productRouter.delete(
//   "/product/:id",
//   authAdminMiddelware,
//   productControler.deleteProductWithVariants
// );
// productRouter.get("/product", productControler.getAllProductWithVariants);
// productRouter.get("/product/:id", productControler.getProductWithVariantsById);

// productRouter.get("/product/items", productControler.getAllProdutsItem);
// //xo√° m·ªÅm
// productRouter.put(
//   "/product/:id/soft-delete",
//   productControler.softDeleteProduct
// );
// // hi·ªÉn th·ªã xo√° m·ªÅm
// productRouter.get(
//   "product/deleted",
//   productControler.getAllDeletedProductWithVariants
// );
// module.exports = productRouter;
const express = require("express");
const productRouter = express.Router();
const upload = require("../middlewares/uploadProduct.middleware");
const productControler = require("../controllers/product.controller");
const authAdminMiddelware = require("../middlewares/authAdmin.middleware");

// üëâ T·∫°o c√°c field ƒë·ªông cho ·∫£nh bi·∫øn th·ªÉ: imageVariant_0[], imageVariant_1[], ...
const variantFields = Array.from({ length: 20 }).map((_, i) => ({
  name: `imageVariant_${i}[]`,
  maxCount: 10,
}));

// ‚úÖ T·∫°o s·∫£n ph·∫©m + bi·∫øn th·ªÉ
productRouter.post(
  "/product",
  authAdminMiddelware,
  upload.fields([
    { name: "productImage", maxCount: 8 },
    ...variantFields
  ]),
  productControler.createProductWithVariants
);

// ‚úÖ S·ª≠a s·∫£n ph·∫©m + bi·∫øn th·ªÉ
productRouter.put(
  "/product/:id",
  authAdminMiddelware,
  upload.fields([
    { name: "productImage", maxCount: 8 },
    ...variantFields
  ]),
  productControler.updateProductWithVariants
);

// ‚úÖ Xo√° c·ª©ng
productRouter.delete(
  "/product/:id",
  authAdminMiddelware,
  productControler.deleteProductWithVariants
);

// ‚úÖ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
productRouter.get("/product", productControler.getAllProductWithVariants);

// ‚úÖ L·∫•y 1 s·∫£n ph·∫©m k√®m bi·∫øn th·ªÉ
productRouter.get("/product/:id", productControler.getProductWithVariantsById);

// ‚úÖ L·∫•y item r√∫t g·ªçn
productRouter.get("/product/items", productControler.getAllProdutsItem);

// ‚úÖ Xo√° m·ªÅm
productRouter.put(
  "/product/:id/soft-delete",
  productControler.softDeleteProduct
);

// ‚úÖ L·∫•y danh s√°ch ƒë√£ xo√° m·ªÅm
productRouter.get(
  "/product/deleted",  // ‚ö†Ô∏è fix d·∫•u `/` b·ªã thi·∫øu!
  productControler.getAllDeletedProductWithVariants
);

module.exports = productRouter;
